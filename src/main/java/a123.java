import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class a123 extends JPanel {
    private JTextField TextField;
    private JButton AddButton;
    private JList CurrentTasksJList;
    private JButton MarkAsCompletedJButton;
    private JButton button3;
    private JButton DeleteJButton;
    private JButton MarkAsCurrentJButton;
    private JPanel rootPanel;
    private JList CompletedTasksJList;

    public a123() {
        DefaultListModel CurrentTasks = new DefaultListModel();
        DefaultListModel CompletedTasks = new DefaultListModel();
        CurrentTasksJList.setModel(CurrentTasks);
        CompletedTasksJList.setModel(CompletedTasks);
        AddButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                CurrentTasks.addElement(TextField.getText());
                CompletedTasks.addElement(TextField.getText());
            }
        });
        CurrentTasksJList.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                CompletedTasksJList.clearSelection();
            }
        });

        CompletedTasksJList.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                CurrentTasksJList.clearSelection();
            }
        });
        DeleteJButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int[] indices=CurrentTasksJList.getSelectedIndices();
                for(int i=indices.length-1;i>=0;i--){
                    CurrentTasks.removeElementAt(indices[i]);
                }
                int[] indices2=CompletedTasksJList.getSelectedIndices();
                for(int i=indices2.length-1;i>=0;i--){
                    CompletedTasks.removeElementAt(indices2[i]);
                }
            }
        });
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(7, 7, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Создать задачу");
        rootPanel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(228, 16), null, 0, false));
        TextField = new JTextField();
        TextField.setText("");
        rootPanel.add(TextField, new GridConstraints(1, 0, 1, 5, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(20, -1), null, 0, false));
        AddButton = new JButton();
        AddButton.setHideActionText(false);
        AddButton.setText("+");
        rootPanel.add(AddButton, new GridConstraints(1, 6, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(24, 24), new Dimension(24, 24), 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Текущие задачи");
        rootPanel.add(label2, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(228, 16), null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Завершенные задачи");
        rootPanel.add(label3, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(228, 16), null, 0, false));
        MarkAsCompletedJButton = new JButton();
        MarkAsCompletedJButton.setText("Button");
        rootPanel.add(MarkAsCompletedJButton, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(228, 20), new Dimension(20, 20), 0, false));
        button3 = new JButton();
        button3.setText("Button");
        rootPanel.add(button3, new GridConstraints(6, 6, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(63, 24), null, 0, false));
        DeleteJButton = new JButton();
        DeleteJButton.setText("Button");
        rootPanel.add(DeleteJButton, new GridConstraints(6, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(112, 24), null, 0, false));
        MarkAsCurrentJButton = new JButton();
        MarkAsCurrentJButton.setText("Button");
        rootPanel.add(MarkAsCurrentJButton, new GridConstraints(6, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(20, 20), new Dimension(20, 20), 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        rootPanel.add(scrollPane1, new GridConstraints(5, 0, 1, 7, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        CompletedTasksJList = new JList();
        scrollPane1.setViewportView(CompletedTasksJList);
        final JScrollPane scrollPane2 = new JScrollPane();
        rootPanel.add(scrollPane2, new GridConstraints(3, 0, 1, 7, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        CurrentTasksJList = new JList();
        scrollPane2.setViewportView(CurrentTasksJList);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }

    public void setData(CurrentTasks data) {
    }

    public void getData(CurrentTasks data) {
    }

    public boolean isModified(CurrentTasks data) {
        return false;
    }
}
